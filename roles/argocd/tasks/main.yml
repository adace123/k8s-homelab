- name: Create Argo CD repo secret
  include_tasks: "{{ playbook_dir }}/roles/argocd/tasks/create-github-secret.yml" 

- name: Add Argo Helm repo
  community.kubernetes.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: Install ArgoCD
  community.kubernetes.helm:
    name: argo-cd
    chart_ref: argo/argo-cd
    release_namespace: argo-cd
    create_namespace: yes
    wait: yes
    atomic: yes
    wait_timeout: 10m
    values:
      global:
        image:
          repository: alinbalutoiu/argocd
          tag: v2.0.0
      redis:
        image:
          repository: arm32v7/redis
          tag: 5-alpine3.13
      server:
        extraArgs:
          - --insecure
        ingress:
          enabled: true
          hosts:
            - "argocd.{{ k8s_dns_domain }}"
          tls:
            - secretName: argo-cd-tls
              hosts:
                - "argocd.{{ k8s_dns_domain }}"
        config:
          repositories: |
            - type: helm
              url: https://charts.helm.sh/stable
              name: stable
            - type: helm
              url: https://helm.traefik.io/traefik
              name: traefik
            - type: helm
              url: https://coredns.github.io/helm
              name: coredns
            - type: helm
              url: https://charts.jetstack.io
              name: jetstack
            - url: git@github.com:adace123/k8s-homelab.git
              sshPrivateKeySecret:
                name: github-ssh-key
                key: ssh_key
      dex:
        enabled: false

- name: Install root ArgoCD application
  community.kubernetes.k8s:
    apply: yes
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: root
        namespace: argo-cd
      spec:
        destination:
          server: https://kubernetes.default.svc
          namespace: default
        project: default
        source:
          path: applications/
          repoURL: git@github.com:adace123/k8s-homelab.git
          targetRevision: HEAD
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
